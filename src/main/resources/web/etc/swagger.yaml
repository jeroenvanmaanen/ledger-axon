swagger: "2.0"
info:
  description: "This is a sample greeter server. [Swagger contract](resources/etc/swagger.json).  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/)."
  version: 1.0.0
  title: Greeter example
  termsOfService: http://swagger.io/terms/
  contact:
    url: http://leialearns.org/contact/
  license:
    name: LGPLv3
    url: https://www.gnu.org/licenses/lgpl-3.0.en.html
## host: localhost
basePath: /api/greeter
schemes:
- http
consumes: []
produces:
- application/json
tags:
  - Ledger
paths:
  /prod/{name}:
    post:
      tags:
      - Greeter
      description: Prod the greeter to provoke a response
      operationId: prod
      parameters:
      - in: path
        name: name
        description: The name of the person to greet
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        405:
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  /entry:
    post:
      tags:
      - Ledger
      description: Create a new ledger Entry
      operationId: createEntry
      responses:
        201:
          description: entry created
          schema:
            type: string
  "/entry/{id}/jar":
    post:
      tags:
      - Ledger
      description: Assign an Entry to a Jar
      operationId: assignEntryToJar
      consumes:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
      - in: body
        name: jar
        schema:
          $ref: "#/definitions/Jar"
      responses:
        200:
          description: successful operation
          schema:
            type: string
definitions:
  Jar:
    type: object
    properties:
      code:
        type: string
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: https://petstore.swagger.io/oauth/authorize
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
